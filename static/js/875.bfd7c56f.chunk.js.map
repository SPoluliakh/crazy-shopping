{"version":3,"file":"static/js/875.bfd7c56f.chunk.js","mappings":"iIAAO,IAAKA,E,gCAAZ,SAAYA,GAAAA,EAAAA,QAAAA,UAAAA,CAAZ,CAAYA,IAAAA,EAAAA,CAAAA,G,oJCECC,EAAMC,EAAAA,GAAAA,IAAH,gEAEE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGNC,EAAOJ,EAAAA,GAAAA,GAAH,mNAGK,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,UAAnB,IACJ,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,MAAlB,IACJ,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,QAAQC,aAApB,IACJ,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGO,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITQ,EAAQX,EAAAA,GAAAA,GAAH,qEACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMU,UAAUC,CAAtB,IAGHC,EAAed,EAAAA,GAAAA,IAAH,yFAGR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SChBLY,EAAa,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAChD,GAAoCC,EAAAA,EAAAA,UAAiB,GAArD,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAgB,SAACC,GACrB,IAAQC,EAASD,EAAIE,cAAbD,KACRH,GAAc,SAAAK,GAAS,MACZ,cAATF,EAAuBE,EAAY,EAAIA,EAAY,CAD9B,GAGxB,EACD,OACE,UAAC,EAAD,YACE,SAAC,EAAD,CAAQC,IAAKX,EAAOY,IAAKb,KACzB,SAAC,EAAD,UAAWA,KACX,yBAAIE,EAAQG,EAAZ,SACA,UAAC,EAAD,YACE,mBACES,KAAK,SACLL,KAAK,YACLM,QAASR,EACTS,SAAUX,IAAeF,EAJ3B,gBAQA,6BAAKE,EAAL,QACA,mBACES,KAAK,SACLL,KAAK,YACLM,QAASR,EACTS,SAAyB,IAAfX,EAJZ,gBAQA,4CAIP,EClCYY,EAAS,WAAO,IAAD,IAC1B,GAAkBb,EAAAA,EAAAA,WAA0B,WAC1C,IAAMc,EAASC,aAAaC,QAAQtC,EAAAA,EAAAA,SACpC,OAAKoC,EAGwBG,KAAKC,MAAMJ,GAF/B,EAIV,IAPMK,GAAP,eAQMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAEF,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,uBACA,wBACGL,EAAQM,KAAI,gBAAG7B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAO6B,EAAjB,EAAiBA,GAAI5B,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,MAA5B,OACX,SAACJ,EAAD,CAEEC,MAAOA,EACPC,MAAOA,EACP6B,GAAIA,EACJ5B,MAAOA,EACPC,MAAOA,GALF2B,EAFI,QAapB,C","sources":["Helpers/enums/ls.enum.ts","Pages/Basket/BasketItem/BasketItem.styled.ts","Pages/Basket/BasketItem/BasketItem.tsx","Pages/Basket/Basket.tsx"],"sourcesContent":["export enum ELocalStorage {\n  product = 'products',\n}\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 50px;\n  margin-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  background-color: ${p => p.theme.colors.basketItem};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  padding: ${p => p.theme.space[2]}px;\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-right: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.m}px;\n`;\n\nexport const CountWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: ${p => p.theme.space[4]}px;\n`;\n","import { useState, MouseEvent } from 'react';\nimport * as SC from './BasketItem.styled';\n\ninterface IProps {\n  title: string;\n  image: string;\n  id?: number;\n  price: number;\n  key: number;\n  count: number;\n}\n\nexport const BasketItem = ({ title, image, price, count }: IProps) => {\n  const [totalPrice, setTotalPrice] = useState<number>(1);\n\n  const countQuantity = (evt: MouseEvent<HTMLButtonElement>) => {\n    const { name } = evt.currentTarget;\n    setTotalPrice(prevState =>\n      name === 'increment' ? prevState + 1 : prevState - 1\n    );\n  };\n  return (\n    <SC.Item>\n      <SC.Img src={image} alt={title} />\n      <SC.Title>{title}</SC.Title>\n      <p>{price * totalPrice} $</p>\n      <SC.CountWrapper>\n        <button\n          type=\"button\"\n          name=\"increment\"\n          onClick={countQuantity}\n          disabled={totalPrice === count}\n        >\n          +\n        </button>\n        <p> {totalPrice} </p>\n        <button\n          type=\"button\"\n          name=\"decrement\"\n          onClick={countQuantity}\n          disabled={totalPrice === 1}\n        >\n          -\n        </button>\n        <button>DELETE</button>\n      </SC.CountWrapper>\n    </SC.Item>\n  );\n};\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { ELocalStorage } from '../../Helpers/enums/ls.enum';\nimport { BasketItem } from './BasketItem/BasketItem';\n\ninterface IProduct {\n  title: string;\n  image: string;\n  id: number;\n  price: number;\n  count: number;\n}\n\nexport const Basket = () => {\n  const [produts] = useState<IProduct[] | []>(() => {\n    const isInLs = localStorage.getItem(ELocalStorage.product);\n    if (!isInLs) {\n      return [];\n    }\n    const products: IProduct[] = JSON.parse(isInLs);\n    return products;\n  });\n  const location = useLocation();\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>Go back </Link>\n      <ul>\n        {produts.map(({ title, image, id, price, count }) => (\n          <BasketItem\n            key={id}\n            title={title}\n            image={image}\n            id={id}\n            price={price}\n            count={count}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n"],"names":["ELocalStorage","Img","styled","p","theme","space","Item","colors","basketItem","radii","normal","shadows","buttonsShadow","Title","fontSizes","m","CountWrapper","BasketItem","title","image","price","count","useState","totalPrice","setTotalPrice","countQuantity","evt","name","currentTarget","prevState","src","alt","type","onClick","disabled","Basket","isInLs","localStorage","getItem","JSON","parse","produts","location","useLocation","to","state","from","map","id"],"sourceRoot":""}