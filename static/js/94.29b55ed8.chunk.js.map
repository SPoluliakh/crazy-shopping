{"version":3,"file":"static/js/94.29b55ed8.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,qRAYJC,EAAOD,EAAAA,GAAAA,IAAH,wIAQJE,EAASF,EAAAA,GAAAA,OAAH,6P,SCLNG,EAAc,SAAC,GAQb,IAPbC,EAOY,EAPZA,MACAC,EAMY,EANZA,MACAC,EAKY,EALZA,GACAC,EAIY,EAJZA,YACAC,EAGY,EAHZA,MACAC,EAEY,EAFZA,KACAC,EACY,EADZA,MAEA,GAAsCC,EAAAA,EAAAA,WAAkB,GAAxD,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAMC,EAAAA,EAAAA,MAAND,EAyBFE,EAAc,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAaU,WAAW,IAAK,KAEpD,OACE,UAAC,EAAD,YACE,wBAAKH,EAAE,cAAD,OAAeV,OACrB,UAAC,EAAD,YACE,gBAAKc,IAAKb,EAAOc,IAAKf,EAAOgB,MAAO,CAAEC,MAAO,YAC7C,4BACE,yBACGP,EAAE,kBADL,KAC0BJ,EAD1B,SAGA,yBACGI,EAAE,kBADL,KAC0BN,MAE1B,yBACGM,EAAE,mBADL,KAC2BL,MAE3B,SAAC,EAAD,CAAWa,KAAK,SAASC,QApCb,WAClB,IAAMC,EAAoB,CAAEpB,MAAAA,EAAOC,MAAAA,EAAOC,GAAAA,EAAII,MAAAA,EAAOF,MAAAA,GAC/CiB,EAAwBC,aAAaC,QAAQC,EAAAA,EAAAA,SACnD,GAAKH,EAAL,CAIA,IAAMI,EAAaC,KAAKC,MAAMN,GACLI,EAAWG,MAClC,SAACC,GAAD,OAAkBA,EAAK3B,KAAOkB,EAAUlB,EAAxC,KAGAoB,aAAaQ,QACXN,EAAAA,EAAAA,QACAE,KAAKK,UAAL,kBAAmBN,GAAnB,CAA+BL,KARlC,MAFCE,aAAaQ,QAAQN,EAAAA,EAAAA,QAAuBE,KAAKK,UAAU,CAACX,IAc/D,EAkBO,UACE,SAAC,MAAD,CAAQY,KAAM,cAIpB,2BACGxB,IAAe,6BAAKE,EAAE,oBAAD,OAAqBE,QAC3C,mBAAQM,KAAK,SAASC,QA/CP,WACnBV,GAAe,SAAAwB,GAAS,OAAKA,CAAL,GACzB,EA6CK,SACyCvB,EAArCF,EAAuC,eAAvB,0BAtBVN,EA2BjB,C,uBClFM,IAAKsB,E,gCAAZ,SAAYA,GAAAA,EAAAA,QAAAA,UAAAA,CAAZ,CAAYA,IAAAA,EAAAA,CAAAA,G,8GCECU,E,QAAOtC,GAAAA,GAAH,oI,SCEJuC,EAAiB,WAC5B,IAAQC,GAASC,EAAAA,EAAAA,GAAsB,oBAA/BD,KAER,OACE,+BACE,SAAC,EAAD,iBACGA,QADH,IACGA,OADH,EACGA,EAAME,KACL,gBACEtC,EADF,EACEA,MACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,GACAC,EAJF,EAIEA,YACAG,EALF,EAKEA,MALF,IAMEiC,OAAUnC,EANZ,EAMYA,MAAOC,EANnB,EAMmBA,KANnB,OAQE,SAACN,EAAA,EAAD,CAEEC,MAAOA,EACPC,MAAOA,EACPC,GAAIA,EACJC,YAAaA,EACbC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,GAPFJ,EATT,OAuBT,C","sources":["Components/ProductCard/ProductCard.styled.ts","Components/ProductCard/ProductCard.tsx","Helpers/enums/ls.enum.ts","Pages/Catalogue/WomensProducts/WomensProducts.styled.ts","Pages/Catalogue/WomensProducts/WomensProducts.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 3 - 30px);\n  margin-bottom: 30px;\n  margin-right: 30px;\n  padding: 10px;\n  box-shadow: 2px 9px 5px -1px rgba(0, 0, 0, 0.66);\n  border-radius: 10px;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  flex-grow: 1;\n`;\n\nexport const AddBtn = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  border: transparent;\n  margin-top: 20px;\n  transition: transform 250ms linear;\n\n  :hover {\n    transform: rotateZ(360deg) scale(1.5);\n    transform-origin: 50%;\n  }\n`;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FcPlus } from 'react-icons/fc';\nimport { ELocalStorage } from '../../Helpers/enums/ls.enum';\nimport * as SC from './ProductCard.styled';\n\ninterface IProps {\n  title: string;\n  image: string;\n  id: number;\n  description?: string;\n  count?: number;\n  rate?: number;\n  price: number;\n  key?: number;\n}\n\nexport const ProductCard = ({\n  title,\n  image,\n  id,\n  description,\n  count,\n  rate,\n  price,\n}: IProps) => {\n  const [showDetails, setShowDetails] = useState<boolean>(false);\n  const { t } = useTranslation();\n\n  const onDetailsBtn = (): void => {\n    setShowDetails(prevState => !prevState);\n  };\n\n  const onAddButton = () => {\n    const itemToAdd: IProps = { title, image, id, price, count };\n    const isInLS: string | null = localStorage.getItem(ELocalStorage.product);\n    if (!isInLS) {\n      localStorage.setItem(ELocalStorage.product, JSON.stringify([itemToAdd]));\n      return;\n    }\n    const lsProducts = JSON.parse(isInLS);\n    const product: boolean = lsProducts.some(\n      (item: IProps) => item.id === itemToAdd.id\n    );\n    if (!product) {\n      localStorage.setItem(\n        ELocalStorage.product,\n        JSON.stringify([...lsProducts, itemToAdd])\n      );\n      return;\n    }\n  };\n  const descriptionKey = description?.replaceAll(':', '_');\n\n  return (\n    <SC.Item key={id}>\n      <h2>{t(`curd.title.${title}`)}</h2>\n      <SC.Wrap>\n        <img src={image} alt={title} style={{ width: '150px' }} />\n        <div>\n          <p>\n            {t('curdinfo.Price')}: {price} $\n          </p>\n          <p>\n            {t('curdinfo.Stock')}: {count}\n          </p>\n          <p>\n            {t('curdinfo.Rating')}: {rate}\n          </p>\n          <SC.AddBtn type=\"button\" onClick={onAddButton}>\n            <FcPlus size={24} />\n          </SC.AddBtn>\n        </div>\n      </SC.Wrap>\n      <div>\n        {showDetails && <p> {t(`curd.description.${descriptionKey}`)}</p>}\n        <button type=\"button\" onClick={onDetailsBtn}>\n          {!showDetails ? t(`curdbtn.Details`) : t(`curdbtn.Hide`)}\n        </button>\n      </div>\n    </SC.Item>\n  );\n};\n","export enum ELocalStorage {\n  product = 'products',\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -30px;\n  margin-right: -30px;\n`;\n","import { useFetchProductsQuery } from '../../../Redux/catalogueOperations/catalogueOperations';\nimport { ProductCard } from '../../../Components/ProductCard/ProductCard';\nimport * as SC from './WomensProducts.styled';\n\nexport const WomensProducts = () => {\n  const { data } = useFetchProductsQuery(`women's clothing`);\n\n  return (\n    <>\n      <SC.List>\n        {data?.map(\n          ({\n            title,\n            image,\n            id,\n            description,\n            price,\n            rating: { count, rate },\n          }) => (\n            <ProductCard\n              key={id}\n              title={title}\n              image={image}\n              id={id}\n              description={description}\n              count={count}\n              rate={rate}\n              price={price}\n            />\n          )\n        )}\n      </SC.List>\n    </>\n  );\n};\n"],"names":["Item","styled","Wrap","AddBtn","ProductCard","title","image","id","description","count","rate","price","useState","showDetails","setShowDetails","t","useTranslation","descriptionKey","replaceAll","src","alt","style","width","type","onClick","itemToAdd","isInLS","localStorage","getItem","ELocalStorage","lsProducts","JSON","parse","some","item","setItem","stringify","size","prevState","List","WomensProducts","data","useFetchProductsQuery","map","rating"],"sourceRoot":""}